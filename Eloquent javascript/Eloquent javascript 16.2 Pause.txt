<link rel="stylesheet" href="css/game.css">

<body>
<script>
  function trackKeys(keys) {
  let down = Object.create(null);
  function track(event) {
    if (keys.includes(event.key)) {
      down[event.key] = event.type == "keydown";
      down["EscapeUp"] = event.type == "keyup" && event.key == "Escape";
      event.preventDefault();
    }
  }
    
  window.addEventListener("keydown", track);
  window.addEventListener("keyup", track);
  down["unregister"] = () =>{
  window.removeEventListener("keydown", track);
  window.removeEventListener("keyup", track);
  }
  return down;
}
const arrowKeys =
  trackKeys(["ArrowLeft", "ArrowRight", "ArrowUp", "Escape"]);
  
  
  function runLevel(level, Display) {
    let display = new Display(document.body, level);
    let state = State.start(level);
    let ending = 1;
    let pause = 0;
    let arrowKeys = trackKeys(["ArrowLeft", "ArrowRight", "ArrowUp", "Escape"]);
    return new Promise(resolve => {
      runAnimation(time => {
        if(arrowKeys.EscapeUp) {
          arrowKeys.EscapeUp = false;
            if(pause == 0) pause = 1;
            else pause = 0;
        }
        if(pause == 0){
        state = state.update(time, arrowKeys);
        display.syncState(state);
        if (state.status == "playing") {
          return true;
        } else if (ending > 0) {
          ending -= time;
          return true;
        } else {
          display.clear();
          resolve(state.status);
          arrowKeys.unregister();
          return false;
        }
        }
      });
    });
  }
  runGame(GAME_LEVELS, DOMDisplay);
</script>
</body>